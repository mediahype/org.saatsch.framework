package org.saatsch.framework.jmmo.data.editor.fx.model;


import dev.morphia.annotations.*;
import org.joda.beans.gen.BeanDefinition;
import org.saatsch.framework.jmmo.data.mongo.EditorObject;
import java.util.Map;
import org.joda.beans.BeanBuilder;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaBean;
import org.joda.beans.MetaProperty;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;


@BeanDefinition
@Entity("Base_Button")
@Indexes(@Index(fields = {@Field(value = "appId")}, options = @IndexOptions(unique = true)))
public class ButtonBase extends EditorObject {



    //------------------------- AUTOGENERATED START -------------------------
    /**
     * The meta-bean for {@code ButtonBase}.
     * @return the meta-bean, not null
     */
    public static ButtonBase.Meta meta() {
        return ButtonBase.Meta.INSTANCE;
    }

    static {
        MetaBean.register(ButtonBase.Meta.INSTANCE);
    }

    @Override
    public ButtonBase.Meta metaBean() {
        return ButtonBase.Meta.INSTANCE;
    }

    //-----------------------------------------------------------------------
    @Override
    public ButtonBase clone() {
        return JodaBeanUtils.cloneAlways(this);
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (obj != null && obj.getClass() == this.getClass()) {
            return super.equals(obj);
        }
        return false;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        return hash ^ super.hashCode();
    }

    @Override
    public String toString() {
        StringBuilder buf = new StringBuilder(32);
        buf.append("ButtonBase{");
        int len = buf.length();
        toString(buf);
        if (buf.length() > len) {
            buf.setLength(buf.length() - 2);
        }
        buf.append('}');
        return buf.toString();
    }

    @Override
    protected void toString(StringBuilder buf) {
        super.toString(buf);
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-bean for {@code ButtonBase}.
     */
    public static class Meta extends EditorObject.Meta {
        /**
         * The singleton instance of the meta-bean.
         */
        static final Meta INSTANCE = new Meta();

        /**
         * The meta-properties.
         */
        private final Map<String, MetaProperty<?>> metaPropertyMap$ = new DirectMetaPropertyMap(
                this, (DirectMetaPropertyMap) super.metaPropertyMap());

        /**
         * Restricted constructor.
         */
        protected Meta() {
        }

        @Override
        public BeanBuilder<? extends ButtonBase> builder() {
            return new DirectBeanBuilder<>(new ButtonBase());
        }

        @Override
        public Class<? extends ButtonBase> beanType() {
            return ButtonBase.class;
        }

        @Override
        public Map<String, MetaProperty<?>> metaPropertyMap() {
            return metaPropertyMap$;
        }

        //-----------------------------------------------------------------------
    }

    //-------------------------- AUTOGENERATED END --------------------------
}
